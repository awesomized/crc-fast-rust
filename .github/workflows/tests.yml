name: Tests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain:
          - "1.81" # minimum for this crate
          - "stable"
          - "nightly"
    steps:
      - uses: actions/checkout@v4 # not pinning to commit hash since this is a GitHub action, which we trust
      - id: cache-cargo
        name: Cache Cargo toolchain
        uses: actions/cache@v4 # not pinning to commit hash since this is a GitHub action, which we trust
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-release
      - if: ${{ steps.cache-cargo.outputs.cache-hit != 'true' }}
        name: Install Rust toolchain
        uses: actions-rs/toolchain@v1 # not pinning to commit hash since this is an archived GitHub action, which we trust
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-toolchain }}
          override: true
      - name: Architecture check
        run: cargo run arch-check
      - name: Architecture check (Optimized)
        run: cargo run --features=optimize_crc32_auto arch-check
      - name: Format
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy
      - name: Test
        run: cargo test
      - name: Test (Optimized)
        run: cargo test --features=optimize_crc32_auto